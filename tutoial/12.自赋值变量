和makefile一样, shell也自定义了很多变量.

$0 这个程序的执行名字
$n 这个程序的第n个参数值，n=1...9
$* 这个程序的所有参数(和$@的差别是,printf,echo打印)
$@ 这个程序的所有参数(可以用在循环列表中)
$# 这个程序的参数个数(相当于C语言里面argc-1)

$$ 这个程序的PID
$? 上一个指令的返回值

$! 执行上一个指令的PID



注意:
当用. xxx.sh执行一个脚本时, 此时该程序的名字是-bash
而用./xxx.sh执行一个脚本时, 此时该程序的名字是./xxx.sh
(可以在改脚本里面echo "$0"即可见)


如果想看本进程的pid, 即脚本中$$的打印值
echo "$$"
可以在该语句后面加上cat,这样就会阻塞住, 
可以另外开一个shell查看这个进程的pid是否和打印的一致.(注意执行方式是./pid.sh)

拿到的结果如下:
merlin   32434 31390  0 11:55 pts/2    00:00:00 /bin/bash ./pid.sh
merlin   32435 32434  0 11:55 pts/2    00:00:00 cat
merlin   32440 30626  2 11:55 pts/3    00:00:00 -bash
merlin   32762 32440  0 11:55 pts/3    00:00:00 ps -ef

(上面两个是原来的shell,下面两个是后来开的,为了去看原来的脚本进程的shell)