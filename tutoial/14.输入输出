1. echo
echo [option] string
-e 解析转义字符(换行,颜色等等)
-n 不回车. (默认情况下,echo回显的内容后面跟着一个回车)

例子:
echo -e "hello\n"
echo "hello"
echo -n "hello"

2. cat
除了阻塞等待用户输入, 还可以合并文件
cat t1.txt t2.txt > t3.txt


3. 管道
前一个命令的结果,作为后一个命令的一部分(输入).


4. tee
把结果输出到标准输出的同时,另外一个副本输出到相应的文件.
例如: (显示的同时保存一份文件到out.log)
ps aux | grep "xxx" | tee out.log

5. 重定向
重定向输出 >, >>
重定向输入 <
(并且同时使用重定向输入输出)

例如:
cmd > file  把标准输出重定向到文件
cmd >> file 追加到文件

特殊的:
把标准错误流重定向到标准输出流(取地址1所指向的文件,即标准输出流), 把cmd执行结果(标准输出重定向到文件file)
cmd > file 2>&1
cmd >> file 2>&1
并且2>&1不能有空格(否则语法报错)

从file1(而不是标准输入)输入, 往file2(而不是标准输出)中写
cmd < file1 > file2

例如使用cat实现copy
cat < file1 > file2
(当然也可以cat file1 > file2)

注意: 除了预定义的0,1,2文件描述符,其他描述符使用,需要使用取地址.
cmd < &fd   把文件描述符fd所指向的文件作为标准输入
cmd > &fd   把文件描述符fd所指向的文件作为标准输出
cmd < &-    关闭标准输入